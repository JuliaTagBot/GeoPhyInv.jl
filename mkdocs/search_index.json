{
    "docs": [
        {
            "location": "/",
            "text": "Grids\n\n\n#\n\n\nSIT.Grid.M1D\n \u2014 \nType\n.\n\n\nData type to represent 1D grid.\n\n\nFields\n\n\n\n\nx\n : values\n\n\nnx\n : number of samples\n\n\n\u03b4x\n : sampling interval\n\n\n\n\nsource\n\n\n#\n\n\nSIT.Grid.M1D\n \u2014 \nMethod\n.\n\n\nConstruct 1-D grid based on nx or \u03b4x\n\n\nsource\n\n\n#\n\n\nSIT.Grid.M2D\n \u2014 \nType\n.\n\n\nData type to represent 2D grid.\n\n\nFields\n\n\n\n\nx\n : horizontal values\n\n\nz\n : vertical values\n\n\nnx\n : number of samples in horizontal direction\n\n\nnz\n : number of samples in vertical direction\n\n\n\u03b4x\n : sampling interval in horizontal direction\n\n\n\u03b4z\n : sampling interval in vertical direction\n\n\n\n\nsource\n\n\n#\n\n\nSIT.Grid.M1D_npow2\n \u2014 \nMethod\n.\n\n\noutput an npow2grid of either time or frequency\n\n\nsource\n\n\n#\n\n\nSIT.Grid.M1D_npow2_tf\n \u2014 \nMethod\n.\n\n\nconvertion between time and frequency npow2 grids\n\n\nsource\n\n\n#\n\n\nSIT.Grid.M1D_resamp\n \u2014 \nMethod\n.\n\n\n1-D grid with a different sampling interval\n\n\n\n\nNot yet implemented for npow2 grids\n\n\n\n\nsource\n\n\n#\n\n\nSIT.Grid.M1D_truncate\n \u2014 \nMethod\n.\n\n\n1-D grid which is has a different size\n\n\nsource\n\n\n#\n\n\nSIT.Grid.M2D_extend\n \u2014 \nMethod\n.\n\n\nExtend M2D by npml grid points on all sides\n\n\nsource\n\n\n\n\nSource Wavelets\n\n\n#\n\n\nSIT.Wavelets.ormsby\n \u2014 \nMethod\n.\n\n\normbsy wavelet\n\n\nsource\n\n\n#\n\n\nSIT.Wavelets.ricker\n \u2014 \nMethod\n.\n\n\nGenerate a Ricker Wavelet\n\n\nArguments\n\n\n\n\nfqdom\n: dominant frequency\n\n\ntgrid\n: time-domain grid\n\n\ntpeak\n: the peak of the ricker in time\n\n\n``\n\n\n\n\nsource\n\n\n\n\nAcquisition\n\n\n#\n\n\nSIT.Acquisition.Geom\n \u2014 \nType\n.\n\n\nreturn acquisition geometry depending  on either horizontal or vertical array It has only one source for every supersource\n\n\nsource\n\n\n#\n\n\nSIT.Acquisition.Geom\n \u2014 \nType\n.\n\n\nsource\n\n\n#\n\n\nSIT.Acquisition.Geom\n \u2014 \nMethod\n.\n\n\nModify input \nGeom\n such that the output has either sources or receivers on the boundary of  \nmgrid\n.\n\n\nArguments\n\n\n\n\nacqgeom::Geom\n : input geometry\n\n\nmgrid::Grid.M2D\n : to determine the boundary\n\n\nattrib::Symbol\n : either \n:srcborder\n or \n:recborder\n\n\n\n\nsource\n\n\n#\n\n\nSIT.Acquisition.Src\n \u2014 \nType\n.\n\n\nData type for the sources used.\n\n\nFields\n\n\n\n\nnss::Int64\n : number of supersources\n\n\nns::Array{Int64}\n : number of sources for each supersource\n\n\nnfield::Int64\n : number of fields\n\n\nwav::Array{Float64}\n : wavelets in time domain\n\n\ntgrid::Grid.M1D\n : time grid\n\n\n\n\nsource\n\n\n#\n\n\nSIT.Acquisition.Src\n \u2014 \nMethod\n.\n\n\nConstructor for \nSrc\n data type. repeat same source wavelet for all sources and supersources\n\n\nArguments\n\n\n\n\nnss::Int64\n : number of supersources\n\n\nns::Int64\n : number of sources\n\n\nwav::Array{Float64}\n\n\n\n\nsource\n\n\n#\n\n\nSIT.Acquisition.Geom_swapsr\n \u2014 \nMethod\n.\n\n\nswap the positions of sources and recievers\n\n\nsource\n\n\n#\n\n\nSIT.Acquisition.Src_tr\n \u2014 \nMethod\n.\n\n\nFunction that returns Src after time reversal\n\n\nsource\n\n\n#\n\n\nSIT.Acquisition.get_vecGeom\n \u2014 \nMethod\n.\n\n\nreturn a vector of the order \n\n\nsource\n\n\n#\n\n\nSIT.Acquisition.get_vecSrc\n \u2014 \nMethod\n.\n\n\nreturn a vector of the order \n\n\nsource\n\n\n\n\nModels\n\n\n#\n\n\nSIT.Models.Seismic\n \u2014 \nType\n.\n\n\nData type fo represent a seismic model.\n\n\nFields\n\n\n\n\nvp0\n :\n\n\nvs0\n :\n\n\n\u03c10\n :\n\n\n\u03c10I\n :\n\n\nK0\n :\n\n\nK0I\n :\n\n\n\u03bc0\n :\n\n\n\u03c7vp\n :\n\n\n\u03c7vs\n :\n\n\n\u03c7\u03c1\n :\n\n\n\u03c7\u03c1I\n :\n\n\n\u03c7K\n :\n\n\n\u03c7KI\n :\n\n\n\u03c7\u03bc\n :\n\n\nmgrid\n :\n\n\n\n\nsource\n\n\n#\n\n\nSIT.Models.Seismic\n \u2014 \nMethod\n.\n\n\nConstruct using input velocity and density arrays\n\n\nsource\n\n\n#\n\n\nSIT.Models.Seismic_extend\n \u2014 \nMethod\n.\n\n\nExtend a seismic model into PML layers\n\n\nsource\n\n\n#\n\n\nSIT.Models.Seismic_resamp\n \u2014 \nMethod\n.\n\n\nfunction to resample in the model domain\n\n\nsource\n\n\n#\n\n\nSIT.Models.extend\n \u2014 \nMethod\n.\n\n\nExtend a model on all four sides\n\n\nsource\n\n\n#\n\n\nSIT.Models.\u03c7\n \u2014 \nFunction\n.\n\n\nReturn contrast model parameter using the reference value.\n\n\nsource\n\n\n\n\nData\n\n\n#\n\n\nSIT.Data.TD\n \u2014 \nType\n.\n\n\ntime domain representation of Seismic Data\n\n\nFields\n\n\n\n\nd\n : data first sorted in time, then in receivers, and finally in sources\n\n\nnfield\n : number of components\n\n\ntgrid\n : \nM1D\n grid to represent time\n\n\nacqgeom\n : acquisition geometry\n\n\n\n\nsource\n\n\n#\n\n\nSIT.Data.TD_resamp\n \u2014 \nMethod\n.\n\n\nfunction to resample data in time domain\n\n\nArguments\n\n\n\n\ndata\n : input data of type \nTD\n\n\ntgrid\n : resampling in time according to this time grid\n\n\n\n\nsource\n\n\n\n\nGallery\n\n\n#\n\n\nSIT.Gallery.Geom\n \u2014 \nMethod\n.\n\n\nGallery of acquisition geometries \nGeom\n based on input \nM2D\n.\n\n\nArguments\n\n\n\n\nattrib::Symbol\n :\n\n\n\n\nOutputs\n\n\n\n\nattrib=:oneonev\n : one source at (xmin, mean(z)) and one receiver at (xmax, mean(z))\n\n\nattrib=:twotwov\n : two vertical wells, two sources at xmin and two receivers at xmax\n\n\n\n\nsource\n\n\n#\n\n\nSIT.Gallery.Geom\n \u2014 \nMethod\n.\n\n\nGallery of acquisition geometries \nGeom\n.\n\n\nArguments\n\n\n\n\nattrib::Symbol\n :\n\n\n\n\nOutputs\n\n\n\n\nattrib=:acou_homo1\n : a simple one source and one receiver configuration\n\n\n\n\nsource\n\n\n#\n\n\nSIT.Gallery.M1D\n \u2014 \nMethod\n.\n\n\nGallery of \nM1D\n grids.\n\n\nArguments\n\n\n\n\nattrib::Symbol\n :\n\n\n\n\nOutputs\n\n\n\n\nattrib=:acou_homo1\n : a time grid for with 2000 samples; maximum time is 1 s\n\n\nattrib=:npow2samp1\n : a sample npow2 grid with 16 samples\n\n\n\n\nsource\n\n\n#\n\n\nSIT.Gallery.M2D\n \u2014 \nMethod\n.\n\n\nGallery of \nM2D\n grids.\n\n\nArguments\n\n\n\n\nattrib::Symbol\n :\n\n\n\n\nOutputs\n\n\n\n\nattrib=:acou_homo1\n : a square grid for with 201 samples in each dimension, with 40 PML\n\n\n\n\n    points; both X and Z vary from -1000 to 1000.\n\n\n\n\n\nsource\n\n\n#\n\n\nSIT.Gallery.Seismic\n \u2014 \nMethod\n.\n\n\nGallery of \nSeismic\n models.\n\n\nArguments\n\n\n\n\nattrib::Symbol\n :\n\n\n\n\nOutputs\n\n\n\n\nattrib=:acou_homo1\n : an homogeneous acoustic model with \nvp0=2000\n and \n\u03c10=2000\n\n\nattrib=:seismic_marmousi2\n : marmousi model with lower resolution; ideal for surface seismic experiments\n\n\nattrib=:seismic_marmousi2_high_res\n : marmousi model high resolution; slower to load\n\n\nattrib=:seismic_marmousi2_box1\n : 1x1 kilometer box of marmousi model; ideal for crosswell, borehole seismic studies\n\n\n\n\nsource\n\n\n#\n\n\nSIT.Gallery.Src\n \u2014 \nMethod\n.\n\n\nGallery of source signals \nSrc\n.\n\n\nArguments\n\n\n\n\nattrib::Symbol\n :\n\n\n\n\nOutputs\n\n\n\n\nattrib=:acou_homo1\n :\n\n\n\n\nsource\n\n\n\n\nSeismic Time-Domain Modeling\n\n\n#\n\n\nSIT.Fdtd.__init__\n \u2014 \nMethod\n.\n\n\ntest function\n\n\nsource\n\n\n#\n\n\nSIT.Fdtd.fdtd_born_mod\n \u2014 \nMethod\n.\n\n\nborn modeling\n\n\nArguments\n\n\n\n\ntgridmod\n: time-domain grid for modeling\n\n\ntgrid\n: time grid for output data\n\n\n\n\nsource\n\n\n#\n\n\nSIT.Fdtd.fdtd_mod\n \u2014 \nMethod\n.\n\n\nAs forward modeling method, the  finite-difference method is employed.  It uses a discrete version of the two-dimensional isotropic acoustic wave equation. As shown in   Figure~ef{fdshmesh_acou}, a staggered-grid mesh is used \n\n\nKeyword Arguments\n\n\n\n\njobname\n : dominant frequency\n\n\nnpropwav\n : number of wavefields propagating independently in the same medium time-domain grid\n\n\nmodel\n : Seismic Model\n\n\nmodel0\n : Background Seismic Model used for Born modeling\n\n\ntgridmod\n : time grid for modeling\n\n\ntgrid\n : time grid for data output\n\n\nrecv_nfield::Int64=1\n : number of fields that receivers record\n\n\nprop_flags\n: flags that combine propagating wavefields\n\n\n\n\nsource\n\n\n\n\nIndependent Component Analysis for Convolutive Mixtures\n\n\n#\n\n\nSIT.CICA.bica\n \u2014 \nMethod\n.\n\n\nPerforms ICA for convolutive mixtures.\n\n\nArguments\n\n\n\n\nmagic_recv\n: a receiver index, where deblending is performed\n\n\nrecv_n\n: total number of receivers\n\n\nsrc_n\n: total number of sources\n\n\ngrid\n: \nM1D\n grid\n\n\nnband\n: number of frequency bins, where ICA is performed\n\n\nnsubfac\n: overlap factor (testing)\n\n\nX\n: blended data\n\n\n\n\nOutput\n\n\n\n\nY\n: deblended data at \nmagic_recv\n\n\n\n\nsource\n\n\n#\n\n\nSIT.CICA.exact_freq_mixing\n \u2014 \nMethod\n.\n\n\nConvolutive mixing in the frequency domain.\n\n\nArguments\n\n\n\n\nAs\n:\n\n\nAb\n:\n\n\nB\n:\n\n\nS\n:\n\n\nfgrid\n:\n\n\n\n\nOutputs\n\n\n\n\nD\n\n\nd\n\n\nDs\n\n\nds\n\n\nDb\n\n\ndb\n\n\n\n\nsource\n\n\n\n\nPlotting\n\n\n#\n\n\nSIT.Plots.printfig\n \u2014 \nMethod\n.\n\n\nsave current fig using matlab2tikz\n\n\nsource\n\n\n#\n\n\nSIT.Plots.Geom\n \u2014 \nMethod\n.\n\n\nPlot acquisition geometry \nAcquisition.Geom\n on  and model grid \nM2D\n.\n\n\nsource\n\n\n#\n\n\nSIT.Plots.Src\n \u2014 \nMethod\n.\n\n\nPlot acqsrc\n\n\nsource\n\n\n#\n\n\nSIT.Plots.TD\n \u2014 \nMethod\n.\n\n\nPlot time-domain data of type \nData.TD\n\n\nArguments\n\n\n\n\ntd::Data.TD\n :\n\n\n\n\nKeyword Arguments\n\n\n\n\nssvec::Vector{Int64}=[1]\n : supersource vector to be plotted\n\n\nfieldvec::Vector{Int64}=[1]\n : field vector to be plotted\n\n\ntr_flag::Bool=false\n : plot time-reversed data when true\n\n\nattrib::Symbol=:wav\n : specify type of plot\n\n\n\n\nsource\n\n\n%## Another Section %\n@contents %Pages = [ %    \"modeling/page1.md\"  %    ] %Depth = 2 %\n %  %\n@contents %Pages = [ %    \"tutorials/page1.md\", %    ] %Depth = 2 %\n\n\n\n\nIndex\n\n\n\n\nSIT.Acquisition.Geom\n\n\nSIT.Acquisition.Geom\n\n\nSIT.Acquisition.Geom\n\n\nSIT.Acquisition.Src\n\n\nSIT.Acquisition.Src\n\n\nSIT.Data.TD\n\n\nSIT.Grid.M1D\n\n\nSIT.Grid.M1D\n\n\nSIT.Grid.M2D\n\n\nSIT.Models.Seismic\n\n\nSIT.Models.Seismic\n\n\nSIT.Acquisition.Geom_swapsr\n\n\nSIT.Acquisition.Src_tr\n\n\nSIT.Acquisition.get_vecGeom\n\n\nSIT.Acquisition.get_vecSrc\n\n\nSIT.CICA.bica\n\n\nSIT.CICA.exact_freq_mixing\n\n\nSIT.Data.TD_resamp\n\n\nSIT.Fdtd.__init__\n\n\nSIT.Fdtd.fdtd_born_mod\n\n\nSIT.Fdtd.fdtd_mod\n\n\nSIT.Gallery.Geom\n\n\nSIT.Gallery.Geom\n\n\nSIT.Gallery.M1D\n\n\nSIT.Gallery.M2D\n\n\nSIT.Gallery.Seismic\n\n\nSIT.Gallery.Src\n\n\nSIT.Grid.M1D_npow2\n\n\nSIT.Grid.M1D_npow2_tf\n\n\nSIT.Grid.M1D_resamp\n\n\nSIT.Grid.M1D_truncate\n\n\nSIT.Grid.M2D_extend\n\n\nSIT.Models.Seismic_extend\n\n\nSIT.Models.Seismic_resamp\n\n\nSIT.Models.extend\n\n\nSIT.Models.\u03c7\n\n\nSIT.Plots.Geom\n\n\nSIT.Plots.Src\n\n\nSIT.Plots.TD\n\n\nSIT.Plots.printfig\n\n\nSIT.Wavelets.ormsby\n\n\nSIT.Wavelets.ricker",
            "title": "Home"
        },
        {
            "location": "/#grids",
            "text": "#  SIT.Grid.M1D  \u2014  Type .  Data type to represent 1D grid.  Fields   x  : values  nx  : number of samples  \u03b4x  : sampling interval   source  #  SIT.Grid.M1D  \u2014  Method .  Construct 1-D grid based on nx or \u03b4x  source  #  SIT.Grid.M2D  \u2014  Type .  Data type to represent 2D grid.  Fields   x  : horizontal values  z  : vertical values  nx  : number of samples in horizontal direction  nz  : number of samples in vertical direction  \u03b4x  : sampling interval in horizontal direction  \u03b4z  : sampling interval in vertical direction   source  #  SIT.Grid.M1D_npow2  \u2014  Method .  output an npow2grid of either time or frequency  source  #  SIT.Grid.M1D_npow2_tf  \u2014  Method .  convertion between time and frequency npow2 grids  source  #  SIT.Grid.M1D_resamp  \u2014  Method .  1-D grid with a different sampling interval   Not yet implemented for npow2 grids   source  #  SIT.Grid.M1D_truncate  \u2014  Method .  1-D grid which is has a different size  source  #  SIT.Grid.M2D_extend  \u2014  Method .  Extend M2D by npml grid points on all sides  source",
            "title": "Grids"
        },
        {
            "location": "/#source-wavelets",
            "text": "#  SIT.Wavelets.ormsby  \u2014  Method .  ormbsy wavelet  source  #  SIT.Wavelets.ricker  \u2014  Method .  Generate a Ricker Wavelet  Arguments   fqdom : dominant frequency  tgrid : time-domain grid  tpeak : the peak of the ricker in time  ``   source",
            "title": "Source Wavelets"
        },
        {
            "location": "/#acquisition",
            "text": "#  SIT.Acquisition.Geom  \u2014  Type .  return acquisition geometry depending  on either horizontal or vertical array It has only one source for every supersource  source  #  SIT.Acquisition.Geom  \u2014  Type .  source  #  SIT.Acquisition.Geom  \u2014  Method .  Modify input  Geom  such that the output has either sources or receivers on the boundary of   mgrid .  Arguments   acqgeom::Geom  : input geometry  mgrid::Grid.M2D  : to determine the boundary  attrib::Symbol  : either  :srcborder  or  :recborder   source  #  SIT.Acquisition.Src  \u2014  Type .  Data type for the sources used.  Fields   nss::Int64  : number of supersources  ns::Array{Int64}  : number of sources for each supersource  nfield::Int64  : number of fields  wav::Array{Float64}  : wavelets in time domain  tgrid::Grid.M1D  : time grid   source  #  SIT.Acquisition.Src  \u2014  Method .  Constructor for  Src  data type. repeat same source wavelet for all sources and supersources  Arguments   nss::Int64  : number of supersources  ns::Int64  : number of sources  wav::Array{Float64}   source  #  SIT.Acquisition.Geom_swapsr  \u2014  Method .  swap the positions of sources and recievers  source  #  SIT.Acquisition.Src_tr  \u2014  Method .  Function that returns Src after time reversal  source  #  SIT.Acquisition.get_vecGeom  \u2014  Method .  return a vector of the order   source  #  SIT.Acquisition.get_vecSrc  \u2014  Method .  return a vector of the order   source",
            "title": "Acquisition"
        },
        {
            "location": "/#models",
            "text": "#  SIT.Models.Seismic  \u2014  Type .  Data type fo represent a seismic model.  Fields   vp0  :  vs0  :  \u03c10  :  \u03c10I  :  K0  :  K0I  :  \u03bc0  :  \u03c7vp  :  \u03c7vs  :  \u03c7\u03c1  :  \u03c7\u03c1I  :  \u03c7K  :  \u03c7KI  :  \u03c7\u03bc  :  mgrid  :   source  #  SIT.Models.Seismic  \u2014  Method .  Construct using input velocity and density arrays  source  #  SIT.Models.Seismic_extend  \u2014  Method .  Extend a seismic model into PML layers  source  #  SIT.Models.Seismic_resamp  \u2014  Method .  function to resample in the model domain  source  #  SIT.Models.extend  \u2014  Method .  Extend a model on all four sides  source  #  SIT.Models.\u03c7  \u2014  Function .  Return contrast model parameter using the reference value.  source",
            "title": "Models"
        },
        {
            "location": "/#data",
            "text": "#  SIT.Data.TD  \u2014  Type .  time domain representation of Seismic Data  Fields   d  : data first sorted in time, then in receivers, and finally in sources  nfield  : number of components  tgrid  :  M1D  grid to represent time  acqgeom  : acquisition geometry   source  #  SIT.Data.TD_resamp  \u2014  Method .  function to resample data in time domain  Arguments   data  : input data of type  TD  tgrid  : resampling in time according to this time grid   source",
            "title": "Data"
        },
        {
            "location": "/#gallery",
            "text": "#  SIT.Gallery.Geom  \u2014  Method .  Gallery of acquisition geometries  Geom  based on input  M2D .  Arguments   attrib::Symbol  :   Outputs   attrib=:oneonev  : one source at (xmin, mean(z)) and one receiver at (xmax, mean(z))  attrib=:twotwov  : two vertical wells, two sources at xmin and two receivers at xmax   source  #  SIT.Gallery.Geom  \u2014  Method .  Gallery of acquisition geometries  Geom .  Arguments   attrib::Symbol  :   Outputs   attrib=:acou_homo1  : a simple one source and one receiver configuration   source  #  SIT.Gallery.M1D  \u2014  Method .  Gallery of  M1D  grids.  Arguments   attrib::Symbol  :   Outputs   attrib=:acou_homo1  : a time grid for with 2000 samples; maximum time is 1 s  attrib=:npow2samp1  : a sample npow2 grid with 16 samples   source  #  SIT.Gallery.M2D  \u2014  Method .  Gallery of  M2D  grids.  Arguments   attrib::Symbol  :   Outputs   attrib=:acou_homo1  : a square grid for with 201 samples in each dimension, with 40 PML       points; both X and Z vary from -1000 to 1000.  source  #  SIT.Gallery.Seismic  \u2014  Method .  Gallery of  Seismic  models.  Arguments   attrib::Symbol  :   Outputs   attrib=:acou_homo1  : an homogeneous acoustic model with  vp0=2000  and  \u03c10=2000  attrib=:seismic_marmousi2  : marmousi model with lower resolution; ideal for surface seismic experiments  attrib=:seismic_marmousi2_high_res  : marmousi model high resolution; slower to load  attrib=:seismic_marmousi2_box1  : 1x1 kilometer box of marmousi model; ideal for crosswell, borehole seismic studies   source  #  SIT.Gallery.Src  \u2014  Method .  Gallery of source signals  Src .  Arguments   attrib::Symbol  :   Outputs   attrib=:acou_homo1  :   source",
            "title": "Gallery"
        },
        {
            "location": "/#seismic-time-domain-modeling",
            "text": "#  SIT.Fdtd.__init__  \u2014  Method .  test function  source  #  SIT.Fdtd.fdtd_born_mod  \u2014  Method .  born modeling  Arguments   tgridmod : time-domain grid for modeling  tgrid : time grid for output data   source  #  SIT.Fdtd.fdtd_mod  \u2014  Method .  As forward modeling method, the  finite-difference method is employed.  It uses a discrete version of the two-dimensional isotropic acoustic wave equation. As shown in   Figure~ef{fdshmesh_acou}, a staggered-grid mesh is used   Keyword Arguments   jobname  : dominant frequency  npropwav  : number of wavefields propagating independently in the same medium time-domain grid  model  : Seismic Model  model0  : Background Seismic Model used for Born modeling  tgridmod  : time grid for modeling  tgrid  : time grid for data output  recv_nfield::Int64=1  : number of fields that receivers record  prop_flags : flags that combine propagating wavefields   source",
            "title": "Seismic Time-Domain Modeling"
        },
        {
            "location": "/#independent-component-analysis-for-convolutive-mixtures",
            "text": "#  SIT.CICA.bica  \u2014  Method .  Performs ICA for convolutive mixtures.  Arguments   magic_recv : a receiver index, where deblending is performed  recv_n : total number of receivers  src_n : total number of sources  grid :  M1D  grid  nband : number of frequency bins, where ICA is performed  nsubfac : overlap factor (testing)  X : blended data   Output   Y : deblended data at  magic_recv   source  #  SIT.CICA.exact_freq_mixing  \u2014  Method .  Convolutive mixing in the frequency domain.  Arguments   As :  Ab :  B :  S :  fgrid :   Outputs   D  d  Ds  ds  Db  db   source",
            "title": "Independent Component Analysis for Convolutive Mixtures"
        },
        {
            "location": "/#plotting",
            "text": "#  SIT.Plots.printfig  \u2014  Method .  save current fig using matlab2tikz  source  #  SIT.Plots.Geom  \u2014  Method .  Plot acquisition geometry  Acquisition.Geom  on  and model grid  M2D .  source  #  SIT.Plots.Src  \u2014  Method .  Plot acqsrc  source  #  SIT.Plots.TD  \u2014  Method .  Plot time-domain data of type  Data.TD  Arguments   td::Data.TD  :   Keyword Arguments   ssvec::Vector{Int64}=[1]  : supersource vector to be plotted  fieldvec::Vector{Int64}=[1]  : field vector to be plotted  tr_flag::Bool=false  : plot time-reversed data when true  attrib::Symbol=:wav  : specify type of plot   source  %## Another Section % @contents %Pages = [ %    \"modeling/page1.md\"  %    ] %Depth = 2 %  %  % @contents %Pages = [ %    \"tutorials/page1.md\", %    ] %Depth = 2 %",
            "title": "Plotting"
        },
        {
            "location": "/#index",
            "text": "SIT.Acquisition.Geom  SIT.Acquisition.Geom  SIT.Acquisition.Geom  SIT.Acquisition.Src  SIT.Acquisition.Src  SIT.Data.TD  SIT.Grid.M1D  SIT.Grid.M1D  SIT.Grid.M2D  SIT.Models.Seismic  SIT.Models.Seismic  SIT.Acquisition.Geom_swapsr  SIT.Acquisition.Src_tr  SIT.Acquisition.get_vecGeom  SIT.Acquisition.get_vecSrc  SIT.CICA.bica  SIT.CICA.exact_freq_mixing  SIT.Data.TD_resamp  SIT.Fdtd.__init__  SIT.Fdtd.fdtd_born_mod  SIT.Fdtd.fdtd_mod  SIT.Gallery.Geom  SIT.Gallery.Geom  SIT.Gallery.M1D  SIT.Gallery.M2D  SIT.Gallery.Seismic  SIT.Gallery.Src  SIT.Grid.M1D_npow2  SIT.Grid.M1D_npow2_tf  SIT.Grid.M1D_resamp  SIT.Grid.M1D_truncate  SIT.Grid.M2D_extend  SIT.Models.Seismic_extend  SIT.Models.Seismic_resamp  SIT.Models.extend  SIT.Models.\u03c7  SIT.Plots.Geom  SIT.Plots.Src  SIT.Plots.TD  SIT.Plots.printfig  SIT.Wavelets.ormsby  SIT.Wavelets.ricker",
            "title": "Index"
        },
        {
            "location": "/tutorials/page1/",
            "text": "FFF FF",
            "title": "Title 1"
        },
        {
            "location": "/modeling/page1/",
            "text": "ff",
            "title": "Title 1"
        }
    ]
}